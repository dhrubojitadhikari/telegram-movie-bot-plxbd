import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# Token ‡¶è‡¶¨‡¶Ç Channel ID .env ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡ßú‡¶æ
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")  # ‡¶Ø‡ßá‡¶Æ‡¶®: @YourChannelName

# Start Command Handler
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üé¨ Welcome! Search for movies by typing their name.")

# Search Command Handler
async def search_movie(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.message.text.lower()
    chat_id = update.effective_chat.id

    # Fetch channel messages
    found = False
    async for message in context.bot.get_chat_history(CHANNEL_ID, limit=50):
        if query in message.text.lower():
            # Forward message to user
            await context.bot.forward_message(chat_id=chat_id, from_chat_id=CHANNEL_ID, message_id=message.message_id)
            found = True

    if not found:
        await update.message.reply_text("‚ùå Sorry, no movies found matching your query!")

# Main Function
def main():
    # Application ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
    application = Application.builder().token(BOT_TOKEN).build()

    # Command ‡¶è‡¶¨‡¶Ç Message Handler ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, search_movie))

    # Bot ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
    application.run_polling()

if __name__ == "__main__":
    main()
